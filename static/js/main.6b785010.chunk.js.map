{"version":3,"sources":["serviceWorker.js","components/navbar.js","components/tests.js","components/nationalcomparison.js","components/casegrowth.js","components/dailychanges.js","components/distPerform.js","components/analys.js","components/data.js","components/serach.js","components/footer.js","index.js","components/home.js"],"names":["Boolean","window","location","hostname","match","Navigation","Fragment","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Test","props","useState","district","setDistrict","setTitle","dates","setDates","tests","setTests","confirms","setConfirms","isDefault","setIsDefault","totaltests","settt","negatives","setnegatives","unconfirmed","setunconfirmed","options","chart","height","type","stroke","width","title","text","dataLabels","enabled","enabledOnSeries","labels","xaxis","yaxis","opposite","series","name","data","options2","slice","series2","useEffect","testcol","dateArray","total","counts","fetch","then","res","json","tt","un","ne","states_tested_data","map","item","i","state","push","updatedon","totaltested","negative","resp","states_daily","c","status","Number","kl","class","onClick","NationalComparison","setType","deathP","setDeathP","activeP","setactiveP","recoveryP","SetRecoveryP","totalact","settotalact","parent","setParent","stateConfirm","stateRec","stateDeath","stateActive","distConf","distRecovered","distDeath","distActive","d","statewise","confirmed","deaths","recovered","active","latestData","cases_time_series","length","Activep","totalconfirmed","toPrecision","totaldeceased","nationRecoveryRate","totalrecovered","RecoveryRate","districtData","dist","deceased","value","styles","buildStyles","textColor","pathColor","CaseGrowth","count","setCount","limit","setLimit","zoom","autoScaleXaxis","toolbar","autoSelected","curve","align","markers","size","colors","strokeColors","strokeWidth","hover","fill","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","grid","row","opacity","categories","date","substr","datesArray","countsArray","result","districtsDaily","Kerala","Alappuzha","Ernakulam","Idukki","Kannur","Kasaragod","Kollam","Kottayam","Kozhikode","Malappuram","Palakkad","Pathanamthitta","Thiruvananthapuram","Thrissur","Wayanad","DailyChanges","rep","rec","DistrictPerformance","recovery","setRecovery","dropShadow","color","top","left","blur","show","borderColor","legend","position","horizontalAlign","floating","offsetY","offsetX","recArray","Analysis","compTitle","setCompTitle","dailyTitle","setDailyTitle","testTitle","console","log","Accordion","defaultActiveKey","Card","Header","as","Button","eventKey","style","Body","Data","fetchedData","setFetchedData","lastUpdated","setLastUpdated","inprop","setInprop","typevar","settypevar","zone","setZone","lastupdatedtime","zones","CSSTransition","in","timeout","classNames","Badge","Search","setText","getItemValue","label","items","renderItem","isHighlighted","background","key","menuStyle","onChange","e","target","onSelect","Footer","icon","faGithub","faTelegram","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCfS,SAASC,IACpB,OAEI,kBAAC,IAAMC,SAAP,KACR,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,8CAAnB,0BACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,YAGf,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUP,KAAK,8CAAf,YACA,kBAACK,EAAA,EAAIE,KAAL,CAAWP,KAAK,8CAAhB,mBAEF,kBAACK,EAAA,EAAD,CAAKC,UAAU,e,oHCdJ,SAASE,EAAKC,GAAO,IAAD,EAEAC,mBAASD,EAAME,UAFf,mBAEfC,GAFe,aAGNF,mBAAS,eAHH,mBAGlBG,GAHkB,aAINH,mBAAS,IAJH,mBAIxBI,EAJwB,KAIlBC,EAJkB,OAKNL,mBAAS,IALH,mBAKxBM,EALwB,KAKlBC,EALkB,OAMAP,mBAAS,IANT,mBAMxBQ,EANwB,KAMfC,EANe,OAOET,oBAAS,GAPX,mBAOxBU,EAPwB,KAOdC,EAPc,OAUJX,qBAVI,mBAUxBY,EAVwB,KAUbC,EAVa,OAWEb,qBAXF,mBAWxBc,EAXwB,KAWdC,EAXc,OAYMf,qBAZN,mBAYxBgB,EAZwB,KAYZC,EAZY,KAazBC,EACN,CACIC,MAAO,CACLC,OAAQ,IACRC,KAAM,QAERC,OAAQ,CACNC,MAAO,CAAC,EAAG,IAEbC,MAAO,CACLC,KAAM,sCAERC,WAAY,CACVC,SAAS,EACTC,gBAAiB,CAAC,IAEpBC,OAAOzB,EACP0B,MAAO,CACLT,KAAM,UAERU,MAAO,CAAC,CACNP,MAAO,CACLC,KAAM,0BAGP,CACDO,UAAU,EACVR,MAAO,CACLC,KAAM,0BASJQ,EAAQ,CAAC,CACXC,KAAM,QACNb,KAAM,SACNc,KAAM7B,GACL,CACD4B,KAAM,WACNb,KAAM,OACNc,KAAM3B,IAKF4B,EACN,CACIjB,MAAO,CACLC,OAAQ,IACRC,KAAM,QAERC,OAAQ,CACNC,MAAO,CAAC,EAAG,IAEbC,MAAO,CACLC,KAAM,sCAERC,WAAY,CACVC,SAAS,EACTC,gBAAiB,CAAC,IAEpBC,OAAOzB,EAAMiC,OAAO,IACpBP,MAAO,CACLT,KAAM,UAERU,MAAO,CAAC,CACNP,MAAO,CACLC,KAAM,0BAGP,CACDO,UAAU,EACVR,MAAO,CACLC,KAAM,0BASJa,EAAS,CAAC,CACZJ,KAAM,QACNb,KAAM,SACNc,KAAM7B,EAAM+B,OAAO,KAClB,CACDH,KAAM,WACNb,KAAM,OACNc,KAAM3B,EAAS6B,OAAO,MAuDpC,OApDAE,qBAAU,WACN,IAAIC,EAAQ,GACRC,EAAU,GACVC,EAAM,IACNC,EAAQ,GAEZzC,EAAYH,EAAME,UACE,KAAjBF,EAAME,UACLE,EAAS,UACTyC,MAAM,qDAAqDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACxEF,MAAK,SAAAV,GACF,IAAIa,EAAGC,EAAGC,EAAI,EACff,EAAKgB,mBAAmBC,KAAI,SAACC,EAAKC,GACX,WAAfD,EAAKE,QACAd,EAAUe,KAAMH,EAAKI,WACrBjB,EAAQgB,KAAKH,EAAKK,aAClBV,EAAMK,EAAKK,YACXR,EAAMG,EAAKM,SACXV,EAAMI,EAAKrC,gBAGvBH,EAAMmC,GACMjC,EAAamC,GACbjC,EAAegC,MAI/BL,MAAM,kDAAkDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UACvEF,MAAK,SAACV,IACHA,EAAKA,EAAK0B,aAAaxB,MAAM,KACtBe,KAAI,SAACU,GACM,cAAXA,EAAEC,SACDrB,GAAYsB,OAAOF,EAAEG,IACrBtB,EAAOa,KAAKd,OAIpBjC,EAAYkC,GACZtC,EAASoC,GACTlC,EAASiC,OAQbrC,EAASJ,EAAME,YAGrB,CAACF,EAAME,WAGL,kBAAC,IAAMlB,SAAP,KACK,yBAAKa,UAAY,yEAClB,wBAAIA,UAAY,qDAClB,wBAAIsE,MAAQ,YACV,uBAAGA,MAAQ,8BACXC,QA9JW,WAAOxD,GAAa,KA6J/B,YADF,KAE0C,wBAAIuD,MAAQ,YACpD,uBAAGA,MAAQ,8BACXC,QAjKS,WAAMxD,GAAa,KAgK5B,kBADwC,KAHxC,OAQCD,GAAa,kBAAC,IAAD,CAAOQ,QAASA,EAASe,OAAQA,EAAQZ,KAAK,OAAOD,OAAQ,OAE9D,IAAZV,GAAqB,kBAAC,IAAD,CAAOQ,QAASkB,EAAUH,OAAQK,EAASjB,KAAK,OAAOD,OAAQ,MAEtF,yBAAKxB,UAAU,sCACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,mCAAf,0BACA,0BAAMA,UAAU,aACbgB,GAFH,MAIE,yBAAKhB,UAAU,UACf,yBAAKA,UAAU,mCAAf,cACF,0BAAMA,UAAU,aACbkB,GAFD,MAIA,yBAAKlB,UAAU,UAAf,IAAyB,yBAAKA,UAAU,mCAAf,gBAC3B,0BAAMA,UAAU,aACboB,GAFwB,QCzL3B,SAASoD,EAAmBrE,GAAO,IAAD,EAGdC,mBAASD,EAAME,UAHD,mBAG7BC,GAH6B,aAItBF,oBAAS,GAJa,mBAItCqB,EAJsC,KAIjCgD,EAJiC,OAKlBrE,mBAAS,GALS,mBAKtCsE,EALsC,KAK/BC,EAL+B,OAMhBvE,mBAAS,GANO,mBAMtCwE,EANsC,KAM9BC,EAN8B,OAOZzE,mBAAS,GAPG,mBAOtC0E,EAPsC,KAO5BC,EAP4B,OAQd3E,mBAAS,GARK,mBAQtC4E,EARsC,KAQ7BC,EAR6B,OASpB7E,mBAAS,eATW,mBAStCwB,EATsC,KAShCrB,EATgC,OAUlBH,mBAAS,SAVS,mBAUtC8E,EAVsC,KAU/BC,EAV+B,KAiF7C,OAtEAxC,qBAAU,WACR,IAAIyC,EAAaC,EAASC,EAAWC,EAsC7BC,EACVC,EACAC,EACAC,EAxCMC,EAAIzF,EAAME,UACZC,EAAYH,EAAME,UAElB2C,MAAM,0CAA0CC,MAAK,SAACe,GAAD,OAAQA,EAAKb,UACjEF,MAAK,SAACV,GACN6C,EAAe7C,EAAKsD,UAAU,IAAIC,UAClCR,EAAc/C,EAAKsD,UAAU,IAAIE,OACjCV,EAAW9C,EAAKsD,UAAU,IAAIG,UAC9BT,EAAehD,EAAKsD,UAAU,IAAII,UAKf,KAAjB9F,EAAME,WACPE,EAAS,UACTyC,MAAM,0CAA0CC,MAAK,SAACe,GAAD,OAAQA,EAAKb,UACjEF,MAAK,SAACV,GAEL,IAAI2D,EAAa9B,OAAO7B,EAAK4D,kBAAkBC,QAC3CC,EAAa9D,EAAKsD,UAAU,IAAIC,UAAYvD,EAAK4D,kBAAkBD,EAAW,GAAGI,eAAiB,IACrGzB,EAAWwB,EAAQE,YAAY,IAC/B,IAAI7B,EAAWnC,EAAKsD,UAAU,IAAIE,OAASxD,EAAK4D,kBAAkBD,EAAW,GAAGM,cAAgB,IAC7F7B,EAAUD,EAAO6B,YAAY,IACnC,IAAIE,EAAuBlE,EAAK4D,kBAAkBD,EAAW,GAAGQ,eAAiBnE,EAAK4D,kBAAkBD,EAAW,GAAGI,eAAiB,IACnIG,EAAmBF,YAAY,GACrC,IACQI,IADmBpE,EAAKsD,UAAU,IAAIG,UAAYzD,EAAKsD,UAAU,IAAIC,UAAY,KAAKS,YAAY,GAChEE,GAAoBF,YAAY,GACxExB,EAAa4B,MACZ1D,MAAK,iBAMNwB,GAAQ,GACRU,EAAU,UACV5E,EAASJ,EAAME,UAKf2C,MAAM,4DAA4DC,MAAK,SAACe,GAAD,OAAQA,EAAKb,UAC/EF,MAAK,SAACV,GACPA,EAAKiB,KAAI,SAACG,EAAMD,GACG,WAAdC,EAAMA,QACMA,EAAMiD,aACVpD,KAAI,SAACqD,EAAKnD,GACZmD,EAAKxG,WAAWuF,IACjBJ,EAAWpB,OAAOyC,EAAKf,WACtBL,EAAgBrB,OAAOyC,EAAKb,WAC5BN,EAAYtB,OAAOyC,EAAKC,UACxBnB,EAAavB,OAAOyC,EAAKZ,YAG9BpB,GAAac,EAAWJ,EAAa,KAAKgB,YAAY,IACrDxB,GAAeU,EAAcJ,EAAU,KAAKkB,YAAY,IACxDtB,GAAcO,EAASJ,EAAc,KAAKmB,YAAY,IACtD5B,GAAYe,EAAUJ,EAAY,KAAKiB,YAAY,cAOlE,CAACpG,EAAME,WAKL,kBAAC,IAAMlB,SAAP,KACI,yBAAKa,UAAU,iCACvB,uBAAGA,UAAU,yCAAyC4B,EAAtD,SAGc,yBAAK5B,UAAU,OAGTyB,GAAQ,yBAAKzB,UAAU,OAC7B,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAOnC,EACP/C,KAAI,UAAK+C,EAAL,KACJoC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAKjB,yBAAKnH,UAAU,oEAAoE4E,EAAnF,kCAA2HM,KAGhH,IAAPzD,GAAgB,yBAAKzB,UAAU,OAC/B,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAOnC,EACP/C,KAAI,UAAK+C,EAAL,KACJoC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAKjB,yBAAKnH,UAAU,oEAAoE4E,EAAnF,+BAAwHM,IAOtH,yBAAKlF,UAAU,OACb,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAOrC,EACP7C,KAAI,UAAK6C,EAAL,KACJsC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAKjB,yBAAKnH,UAAU,oEAAoE0E,EAAnF,0BAAkHQ,IAO/GzD,GAAS,yBAAKzB,UAAU,OACvB,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAOjC,EACPjD,KAAI,UAAKiD,EAAL,KACJkC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAMjB,yBAAKnH,UAAU,oEAAoE8E,EAAnF,+CAIH,IAAPrD,GACY,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAOjC,EACPjD,KAAI,UAAKiD,EAAL,KACJkC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAMjB,yBAAKnH,UAAU,oEAAoE8E,EAAnF,+CAKH,IAAPrD,GACY,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,OACjB,kBAAC,IAAD,CACE+G,MAAO/B,EACPnD,KAAI,UAAKmD,EAAL,KACJgC,OAAQC,YAAY,CAClBC,UAAW,UACXC,UAAW,eAMjB,yBAAKnH,UAAU,oEAAoEgF,EAAnF,yCCnMC,SAASoC,EAAWjH,GAAO,IAAD,EACNC,mBAASD,EAAME,UADT,mBACrBC,GADqB,aAEZF,mBAAS,eAFG,mBAExBG,GAFwB,aAGZH,mBAAS,IAHG,mBAG9BiH,EAH8B,KAGxBC,EAHwB,OAIZlH,mBAAS,IAJG,mBAI9BI,EAJ8B,KAIxBC,EAJwB,OAKJL,oBAAS,GALL,mBAK9BU,EAL8B,KAKpBC,EALoB,OAMZX,qBANY,mBAM9BmH,EAN8B,KAMxBC,EANwB,KAO/BlG,EAAQ,CACVC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNgG,KAAM,CACJhG,KAAM,IACNM,SAAS,EACT2F,gBAAgB,GAElBC,QAAS,CACPC,aAAc,SAGlB9F,WAAY,CACVC,SAAS,GAETL,OAAQ,CACJC,MAAO,EACPkG,MAAO,UAEbjG,MAAO,CACLC,KAAM,wBACNiG,MAAO,QAETC,QAAS,CACPC,KAAM,EACNC,OAAQ,CAAC,WACTC,aAAc,OACdC,YAAa,EACbC,MAAO,CACLJ,KAAM,IAGVK,KAAM,CACJ5G,KAAM,WACN6G,SAAU,CACRC,MAAO,OACPC,iBAAkB,CAAE,WACpBC,eAAgB,EAChBhH,KAAM,aACNiH,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,GAAI,MAGnBC,KAAM,CACJC,IAAK,CACHb,OAAQ,CAAC,UAAW,eACpBc,QAAS,KAGb7G,MAAO,CACL8G,WAAYxI,EACZoB,MAAM,CACJC,KAAK,SAGTM,MAAM,CACJP,MAAM,CACJC,KAAK,iBAGLQ,EAAQ,CAAC,CACXC,KAAM,QACNC,KAAK8E,IAEH7E,EAAS,CACbjB,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNgG,KAAM,CACJhG,KAAM,IACNM,SAAS,EACT2F,gBAAgB,GAElBC,QAAS,CACPC,aAAc,SAGlB9F,WAAY,CACVC,SAAS,GAETL,OAAQ,CACJC,MAAO,EACPkG,MAAO,UAEbjG,MAAO,CACLC,KAAM,wBACNiG,MAAO,QAETC,QAAS,CACPC,KAAM,EACNC,OAAQ,CAAC,WACTC,aAAc,OACdC,YAAa,EACbC,MAAO,CACLJ,KAAM,IAGVK,KAAM,CACJ5G,KAAM,WACN6G,SAAU,CACRC,MAAO,OACPC,iBAAkB,CAAE,WACpBC,eAAgB,EAChBhH,KAAM,aACNiH,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,GAAI,MAGnBC,KAAM,CACJC,IAAK,CACHb,OAAQ,CAAC,UAAW,eACpBc,QAAS,KAGb7G,MAAO,CACL8G,WAAYxI,EAAMiC,MAAM8E,GACxB3F,MAAM,CACJC,KAAK,SAGTM,MAAM,CACJP,MAAM,CACJC,KAAK,iBAGLa,EAAS,CAAC,CACZJ,KAAM,QACNC,KAAK8E,EAAM5E,MAAM8E,KAE3B5E,qBAAU,WACN,IAAIsG,EAAK,GACLlG,EAAS,GACTD,EAAM,EACN8C,EAAIzF,EAAME,SAEd,GADAC,EAAYH,EAAME,UACE,KAAjBF,EAAME,SACLE,EAAS,UACTiH,GAAU,IACVxE,MAAM,kDAAkDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UACvEF,MAAK,SAACV,GACFA,EAAK0B,aAAcT,KAAI,SAACU,GACP,cAAXA,EAAEC,SACD8E,EAAKrF,KAAMM,EAAE+E,KAAMC,OAAO,EAAE,IAC5BpG,GAAYsB,OAAOF,EAAEG,IACrBtB,EAAOa,KAAKd,OAGpBwE,EAASvE,GACTtC,EAASwI,UAGX,CAMF1I,EAASJ,EAAME,UACfmH,GAAU,GACV,IAAI2B,EAAW,GACXC,EAAY,GAChBpG,MAAM,qDAAqDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UAC1EF,MAAK,SAACV,GACL,IAAI8G,EAAQ9G,EAAK+G,eAAeC,OACzB,cAAJ3D,GACDyD,EAAOG,UAAUhG,KAAI,SAACjB,EAAKmB,GAC1ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEC,cAAJxD,GACNyD,EAAOI,UAAUjG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOK,OAAOlG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOM,OAAOnG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,cAAJxD,GACNyD,EAAOO,UAAUpG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOQ,OAAOrG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,aAAJxD,GACNyD,EAAOS,SAAStG,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,cAAJxD,GACNyD,EAAOU,UAAUvG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,eAAJxD,GACNyD,EAAOW,WAAWxG,KAAI,SAACjB,EAAKmB,GAC1ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,aAAJxD,GACNyD,EAAOY,SAASzG,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,mBAAJxD,GACNyD,EAAOa,eAAe1G,KAAI,SAACjB,EAAKmB,GAC9ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,uBAAJxD,GACNyD,EAAOc,mBAAmB3G,KAAI,SAACjB,EAAKmB,GAClCyF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,aAAJxD,GACNyD,EAAOe,SAAS5G,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,YAAJxD,IACNyD,EAAOgB,QAAQ7G,KAAI,SAACjB,EAAKmB,GACvByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,UAapB,CAACjJ,EAAME,WAGT,OAEI,kBAAC,IAAMlB,SAAP,KACK,yBAAKa,UAAY,2EAClB,wBAAIA,UAAY,qDAClB,wBAAIsE,MAAQ,YACV,uBAAGA,MAAQ,8BACXC,QATO,WAAKxD,GAAa,KAQzB,YADF,KAE0C,wBAAIuD,MAAQ,YACpD,uBAAGA,MAAQ,8BACXC,QAVK,WAAOxD,GAAa,KASzB,SAC2BwG,EAD3B,UADwC,KAHxC,OAQCzG,GAAa,kBAAC,IAAD,CAAOQ,QAASA,EAASe,OAAQA,EAAQZ,KAAK,OAAOD,OAAQ,OAE9D,IAAZV,GAAqB,kBAAC,IAAD,CAAOQ,QAASkB,EAAUH,OAAQK,EAASjB,KAAK,OAAOD,OAAQ,OCvTlF,SAAS8I,EAAanK,GAAO,IAAD,EACRC,mBAASD,EAAME,UADP,mBACvBC,GADuB,aAEdF,mBAAS,eAFK,mBAE1BG,GAF0B,aAGEH,mBAAS,IAHX,gCAIKA,mBAAS,KAJd,gCAKbA,sBALa,mBAKhC2C,EALgC,KAKzBuE,EALyB,OAMdlH,mBAAS,IANK,mBAMhCI,EANgC,KAM1BC,EAN0B,KAOjCa,EAAQ,CACVC,MAAO,CACHC,OAAQ,IACRC,KAAM,MACNgG,KAAM,CACJ1F,SAAS,IAGbD,WAAY,CACVC,SAAS,GAEXL,OAAQ,CACNmG,MAAO,YAETjG,MAAO,CACLC,KAAM,kCACNiG,MAAO,QAETe,KAAM,CACJC,IAAK,CACHb,OAAQ,CAAC,UAAW,eACpBc,QAAS,KAGb7G,MAAO,CACL8G,WAAYxI,GAGd2B,MAAM,CACJP,MAAM,CACJC,KAAK,2BAILQ,EAAQ,CAAC,CACXC,KAAM,QACNC,KAAKQ,IAwJb,OAtJAJ,qBAAU,WACN,IAAIsG,EAAK,GACLsB,EAAM,GACNC,EAAM,GAEV,GADAlK,EAAYH,EAAME,UACE,KAAjBF,EAAME,SACLE,EAAS,UACTyC,MAAM,kDAAkDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UACvEF,MAAK,SAACV,GACFA,EAAK0B,aAAcT,KAAI,SAACU,GACP,cAAXA,EAAEC,SACD8E,EAAKrF,KAAMM,EAAE+E,KAAMC,OAAO,EAAE,IAC5BqB,EAAI3G,KAAKM,EAAEG,KAED,cAAXH,EAAEC,QACDqG,EAAI5G,KAAKM,EAAEG,OAGrB,IAAIgF,EAAUkB,EAAI/G,KAAI,SAACuD,EAAMrD,GACzB,OAAQqD,EAAQyD,EAAI9G,MAExB4D,EAAS+B,GACT5I,EAASwI,UAGT,CACF1I,EAASJ,EAAME,UACf,IAAI8I,EAAW,GACXC,EAAY,GACXxD,EAAGzF,EAAME,SACd2C,MAAM,qDAAqDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UAC1EF,MAAK,SAACV,GACL,IAAI8G,EAAQ9G,EAAK+G,eAAeC,OACzB,cAAJ3D,GACDyD,EAAOG,UAAUhG,KAAI,SAACjB,EAAKmB,GAC1ByF,EAAWvF,KAAKrB,EAAK0G,MAErBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEC,cAAJxD,GACNyD,EAAOI,UAAUjG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOK,OAAOlG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOM,OAAOnG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,cAAJxD,GACNyD,EAAOO,UAAUpG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,WAAJxD,GACNyD,EAAOQ,OAAOrG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,aAAJxD,GACNyD,EAAOS,SAAStG,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,cAAJxD,GACNyD,EAAOU,UAAUvG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,eAAJxD,GACNyD,EAAOW,WAAWxG,KAAI,SAACjB,EAAKmB,GAC1ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,aAAJxD,GACNyD,EAAOY,SAASzG,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,mBAAJxD,GACNyD,EAAOa,eAAe1G,KAAI,SAACjB,EAAKmB,GAC9ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IACA,uBAAJxD,GACNyD,EAAOc,mBAAmB3G,KAAI,SAACjB,EAAKmB,GAClCyF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,aAAJxD,GACNyD,EAAOe,SAAS5G,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,IAEA,YAAJxD,IACNyD,EAAOgB,QAAQ7G,KAAI,SAACjB,EAAKmB,GACvByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,cAEvBrF,EAAS0I,GACT7B,EAAS8B,UAMpB,CAACjJ,EAAME,WAIL,kBAAC,IAAMlB,SAAP,KACA,kBAAC,IAAD,CAAOmC,QAASA,EAASe,OAAQA,EAAQZ,KAAK,MAAMD,OAAQ,OCvMrD,SAASiJ,EAAoBtK,GAAO,IAAD,EAEnBC,mBAASD,EAAME,UAFI,mBAElCC,GAFkC,aAGzBF,qBAHyB,mBAG3CI,EAH2C,KAGrCC,EAHqC,OAIzBL,qBAJyB,mBAI3CiH,EAJ2C,KAIrCC,EAJqC,OAKnBlH,qBALmB,mBAK3CsK,EAL2C,KAKlCC,EALkC,KAO5CtI,EAAS,CACX,CACEC,KAAM,gBACNC,KAAM8E,GAER,CACE/E,KAAM,aACNC,KAAMmI,IAGJpJ,EAAU,CACdC,MAAO,CACLC,OAAQ,IACRC,KAAM,OACNmJ,WAAY,CACV7I,SAAS,EACT8I,MAAO,OACPC,IAAK,GACLC,KAAM,EACNC,KAAM,GACNjC,QAAS,IAEXpB,QAAS,CACPsD,MAAM,IAGVhD,OAAQ,CAAC,UAAW,WACpBnG,WAAY,CACVC,SAAS,GAEXL,OAAQ,CACNmG,MAAO,UAETjG,MAAO,CACLC,KAAM,yCACNiG,MAAO,QAETe,KAAM,CACJqC,YAAa,UACbpC,IAAK,CACHb,OAAQ,CAAC,UAAW,eACpBc,QAAS,KAGbhB,QAAS,CACPC,KAAM,GAER9F,MAAO,CACL8G,WAAYxI,EACZoB,MAAO,CACLC,KAAM,SAGVM,MAAO,CACLP,MAAO,CACLC,KAAM,WAIVsJ,OAAQ,CACNC,SAAU,MACVC,gBAAiB,QACjBC,UAAU,EACVC,SAAU,GACVC,SAAU,IAoKZ,OA7JJ7I,qBAAU,WACN,IAAIiD,EAAEzF,EAAME,SAEZ,GADJC,EAAYH,EAAME,UACM,KAAjBF,EAAME,SACL,OAAO,KAGPC,EAAYH,EAAME,UAClB,IAAI8I,EAAW,GACXC,EAAY,GACZqC,EAAU,GAEdzI,MAAM,qDAAqDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UAC1EF,MAAK,SAACV,GACL,IAAI8G,EAAQ9G,EAAK+G,eAAeC,OACzB,cAAJ3D,GACDyD,EAAOG,UAAUhG,KAAI,SAACjB,EAAKmB,GAC1ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAEpBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEF,cAAJ7F,GACNyD,EAAOI,UAAUjG,KAAI,SAACjB,EAAKmB,GACzByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEF,WAAJ7F,GACNyD,EAAOK,OAAOlG,KAAI,SAACjB,EAAKmB,GACpByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,WAAJ7F,GACNyD,EAAOM,OAAOnG,KAAI,SAACjB,EAAKmB,GACpByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,cAAJ7F,GACNyD,EAAOO,UAAUpG,KAAI,SAACjB,EAAKmB,GACvByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,WAAJ7F,GACNyD,EAAOQ,OAAOrG,KAAI,SAACjB,EAAKmB,GACpByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IACJ,aAAJ7F,GACNyD,EAAOS,SAAStG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,cAAJ7F,GACNyD,EAAOU,UAAUvG,KAAI,SAACjB,EAAKmB,GACvByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,eAAJ7F,GACNyD,EAAOW,WAAWxG,KAAI,SAACjB,EAAKmB,GACxByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IACJ,aAAJ7F,GACNyD,EAAOY,SAASzG,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,mBAAJ7F,GACNyD,EAAOa,eAAe1G,KAAI,SAACjB,EAAKmB,GAC5ByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IACJ,uBAAJ7F,GACNyD,EAAOc,mBAAmB3G,KAAI,SAACjB,EAAKmB,GAChCyF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,aAAJ7F,GACNyD,EAAOe,SAAS5G,KAAI,SAACjB,EAAKmB,GACtByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,IAEJ,YAAJ7F,IACNyD,EAAOgB,QAAQ7G,KAAI,SAACjB,EAAKmB,GACrByF,EAAWvF,KAAKrB,EAAK0G,MACrBG,EAAYxF,KAAKrB,EAAKuD,WACtB2F,EAAS7H,KAAKrB,EAAKyD,cAErBvF,EAAS0I,GACT7B,EAAS8B,GACTuB,EAAYc,SAKxB,CAACtL,EAAME,WAGD,kBAAC,IAAMlB,SAAP,KAED,kBAAC,IAAD,CAAOmC,QAASA,EAASe,OAAQA,EAAQZ,KAAK,OAAOD,OAAQ,OCxOpD,SAASkK,EAASvL,GAAO,IAAD,EACLC,mBAASD,EAAME,UADV,mBAC7BA,EAD6B,KACpBC,EADoB,OAEXF,mBAAS,eAFE,mBAEvBG,GAFuB,aAGHH,mBAAS,+BAHN,mBAG7BuL,EAH6B,KAGnBC,EAHmB,OAIdxL,oBAAS,GAJK,mBAI7BqB,EAJ6B,KAIxBgD,EAJwB,OAKDrE,mBAAS,iBALR,mBAK7ByL,EAL6B,KAKlBC,EALkB,OAMH1L,mBAAS,yBANN,mBAM7B2L,EAN6B,UA8BpC,OAvBApJ,qBAAU,WACNrC,EAAYH,EAAME,UAClB2L,QAAQC,IAAI9L,EAAME,UACE,KAAjBF,EAAME,SACPE,EAAS,WAMTA,EAASJ,EAAME,UACfuL,EAAa,4BACbnH,GAAQ,GACRqH,EAAc,iCAQlB,CAAC3L,EAAME,WAGL,kBAAC,IAAMlB,SAAP,KACG,yBAAKa,UAAU,mBACf,kBAACkM,EAAA,EAAD,CAAWC,iBAAiB,KACrC,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACH,EAAA,EAAUvM,OAAX,CAAkB2M,GAAIC,IAAQ/M,QAAQ,OAAOgN,SAAS,IAAIC,MAAO,CAAC,eAAiB,SACjFd,IAGJ,kBAACO,EAAA,EAAUrM,SAAX,CAAoB2M,SAAS,KAC3B,kBAACJ,EAAA,EAAKM,KAAN,KACI,kBAAClI,EAAD,CAAoBnE,SAAUF,EAAME,cAI5C,kBAAC+L,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACH,EAAA,EAAUvM,OAAX,CAAkB2M,GAAIC,IAAQ/M,QAAQ,OAAOgN,SAAS,IAAIC,MAAO,CAAC,eAAiB,SAAnF,yBAIF,kBAACP,EAAA,EAAUrM,SAAX,CAAoB2M,SAAS,KAC3B,kBAACpF,EAAD,CAAY/G,SAAUF,EAAME,aAGhC,kBAAC+L,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACH,EAAA,EAAUvM,OAAX,CAAkB2M,GAAIC,IAAQ/M,QAAQ,OAAOgN,SAAS,IAAIC,MAAO,CAAC,eAAiB,SAChFZ,IAGL,kBAACK,EAAA,EAAUrM,SAAX,CAAoB2M,SAAS,KAC3B,kBAACJ,EAAA,EAAKM,KAAN,KACIjL,GAAQ,kBAAC6I,EAAD,CAAcjK,SAAUA,KACzB,IAAPoB,GAAgB,kBAACgJ,EAAD,CAAqBpK,SAAUA,OAMrDoB,GAAS,kBAAC2K,EAAA,EAAD,KACT,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACH,EAAA,EAAUvM,OAAX,CAAkB2M,GAAIC,IAAQ/M,QAAQ,OAAOgN,SAAS,IAAIC,MAAO,CAAC,eAAiB,SAClFV,IAGH,kBAACG,EAAA,EAAUrM,SAAX,CAAoB2M,SAAS,KAC3B,kBAACJ,EAAA,EAAKM,KAAN,KACA,kBAACxM,EAAD,CAAMG,SAAUA,UCjFP,SAASsM,EAAKxM,GAAO,IAAD,EACAC,mBAASD,EAAME,UADf,mBACfC,GADe,aAEMF,mBAAS,IAFf,mBAExBwM,EAFwB,KAEZC,EAFY,OAGNzM,mBAAS,eAHH,mBAGxBwB,EAHwB,KAGlBrB,EAHkB,OAIMH,mBAAS,aAJf,mBAIxB0M,EAJwB,KAIZC,EAJY,OAKJ3M,oBAAS,GALL,mBAKxB4M,EALwB,KAKjBC,EALiB,OAMF7M,oBAAS,GANP,mBAMxB8M,EANwB,KAMhBC,EANgB,OAOR/M,qBAPQ,mBAOxBgN,EAPwB,KAOnBC,EAPmB,KA0F/B,OAjFA1K,qBAAU,WAGN,GAFArC,EAAYH,EAAME,UAEE,KAAjBF,EAAME,SAGP2C,MAAM,0CACPC,MAAK,SAACe,GAAD,OAAQA,EAAKb,UAClBF,MAAK,SAACV,GAENsK,EAAetK,EAAKsD,UAAU,KAC3BkH,EAAexK,EAAKsD,UAAU,IAAIyH,oBACnCrK,MAAK,WACJgK,GAAU,UAId,CACA,IAAMrH,EAAIzF,EAAME,SAChBE,EAASJ,EAAME,UACf8M,GAAW,GACXnK,MAAM,qDAAqDC,MAAK,SAAAe,GAAI,OAAEA,EAAKb,UAC1EF,MAAK,SAACV,GACL,IAAI8G,EAAQ9G,EAAK+G,eAAeC,OACzB,cAAJ3D,GACDiH,EAAgBxD,EAAOG,UAAW/G,OAAO,GAAG,IAC5CuJ,QAAQC,IAAI5C,EAAOG,UAAU/G,OAAO,KAE1B,cAAJmD,EACNiH,EAAexD,EAAOI,UAAUhH,OAAO,GAAG,IAEhC,WAAJmD,EACNiH,EAAexD,EAAOK,OAAOjH,OAAO,GAAG,IAE7B,WAAJmD,EACNiH,EAAexD,EAAOM,OAAOlH,OAAO,GAAG,IAE7B,cAAJmD,EACNiH,EAAexD,EAAOO,UAAUnH,OAAO,GAAG,IAEhC,WAAJmD,EACNiH,EAAexD,EAAOQ,OAAOpH,OAAO,GAAG,IAE7B,aAAJmD,EACNiH,EAAexD,EAAOS,SAASrH,OAAO,GAAG,IAE/B,cAAJmD,EACNiH,EAAexD,EAAOU,UAAUtH,OAAO,GAAG,IAEhC,eAAJmD,EACNiH,EAAexD,EAAOW,WAAWvH,OAAO,GAAG,IAEjC,aAAJmD,EACNiH,EAAexD,EAAOY,SAASxH,OAAO,GAAG,IAE/B,mBAAJmD,EACNiH,EAAexD,EAAOa,eAAezH,OAAO,GAAG,IAErC,uBAAJmD,EACNiH,EAAexD,EAAOc,mBAAmB1H,OAAO,GAAG,IAEzC,aAAJmD,EACNiH,EAAexD,EAAOe,SAAS3H,OAAO,GAAG,IAE/B,YAAJmD,GACNiH,EAAexD,EAAOgB,QAAQ5H,OAAO,GAAG,OAI1CO,MAAM,2CAA2CC,MAAK,SAACe,GAAD,OAAQA,EAAKb,UAClEF,MAAK,SAACV,GACHA,EAAKgL,MAAM/J,KAAI,SAACqD,EAAKnD,GACdmD,EAAKxG,WAAWF,EAAME,UACrBgN,EAAQxG,EAAKuG,eAO7B,CAACjN,EAAME,WAEL,kBAAC,IAAMlB,SAAP,KACI,yBAAKa,UAAU,mBAEX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,SAAf,IAAyB4B,EAAzB,OAGQ,IAAVsL,GACE,yBAAKlN,UAAU,OACZ,yBAAKA,UAAU,qCAAoC,yBAAKA,UAAU,oBAAoByM,MAAO,CAAC,SAAW,SAAtD,2BAClC,0BAAMA,MAAO,CAAC,MAAQW,EAAK,WAAa,aAAcA,GADpB,WAO1D,yBAAKpN,UAAU,QACX,yBAAKA,UAAU,uDAAf,kBAAqF8M,EAArF,MAEX,kBAACU,EAAA,EAAD,CACAC,GAAIT,EACJU,QAAS,IACTC,WAAW,QACJ,yBAAK3N,UAAU,OACX,yBAAKA,UAAU,+CACX,yBAAKA,UAAU,SACX,kBAAC4N,EAAA,EAAD,CAAOpO,QAAQ,WAAf,iBAAuC,6BAAMoN,EAAY9G,aAIjE,yBAAK9F,UAAU,+CACX,yBAAKA,UAAU,SACX,kBAAC4N,EAAA,EAAD,CAAOpO,QAAQ,WAAf,kBAAwC,6BAAMoN,EAAY5G,aAIlE,yBAAKhG,UAAU,+CACX,yBAAKA,UAAU,SACX,kBAAC4N,EAAA,EAAD,CAAOpO,QAAQ,UAAf,eAAoC,6BAClC0N,GAAWN,EAAY7G,QACb,IAAVmH,GAAmBN,EAAY9F,YAKzC,yBAAK9G,UAAU,+CACX,yBAAKA,UAAU,oBACX,kBAAC4N,EAAA,EAAD,CAAOpO,QAAQ,QAAf,kBAAqC,6BAAMoN,EAAY3G,aAMvE,kBAACyF,EAAD,CAAUrL,SAAUF,EAAME,YCjJvB,SAASwN,IAAS,IAAD,EACLzN,mBAAS,IADJ,mBACrByB,EADqB,KAChBiM,EADgB,KAW5B,OACI,kBAAC,IAAM3O,SAAP,KACI,yBAAKa,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,sCAAf,YAGA,kBAAC,IAAD,CAEgB+N,aAAc,SAACtK,GAAD,OAAUA,EAAKuK,OAC7BC,MAAO,CACH,CAAED,MAAO,YAAYlO,GAAG,GACxB,CAAEkO,MAAO,YAAYlO,GAAG,GACxB,CAAEkO,MAAO,SAASlO,GAAG,GACrB,CAAEkO,MAAO,SAASlO,GAAG,GACrB,CAAEkO,MAAO,YAAYlO,GAAG,GACxB,CAAEkO,MAAO,SAASlO,GAAG,GACrB,CAAEkO,MAAO,WAAWlO,GAAG,GACvB,CAAEkO,MAAO,YAAYlO,GAAG,GACxB,CAAEkO,MAAO,aAAalO,GAAG,GACzB,CAAEkO,MAAO,WAAWlO,GAAG,IACvB,CAAEkO,MAAO,iBAAiBlO,GAAG,IAC7B,CAAEkO,MAAO,qBAAqBlO,GAAG,IACjC,CAAEkO,MAAO,WAAWlO,GAAG,IACvB,CAAEkO,MAAO,UAAUlO,GAAG,KAG1BoO,WAAY,SAACzK,EAAM0K,GAAP,OACR,yBAAK1B,MAAO,CAAE2B,WAAYD,EAAgB,YAAc,SAAWE,IAAK5K,EAAK3D,IAC5E2D,EAAKuK,QAGVM,UA3C5B,CACT,UAAW,kBACV,aAAgB,OACjB,WAAY,MACX,YAAe,MACf,MAAS,iBACT,WAAc,OACd,cAAiB,aAqCmBvH,MAAOlF,EACP0M,SAAU,SAAAC,GAAMV,EAAQU,EAAEC,OAAO1H,QACjC2H,SAAU,SAAA3H,GAAK,OAAI+G,EAAQ/G,UAO3D,kBAAC4F,EAAD,CAAMtM,SAAWwB,K,oBCrDd,SAAS8M,IAGpB,OACI,kBAAC,IAAMxP,SAAP,KACQ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACP,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,QAAf,sBAA8C,6BAC9C,yBAAKA,UAAU,0BAAf,sGAEJ,yBAAKA,UAAU,sDAAf,gCAEiC,uBAAGA,UAAU,YAAYN,KAAK,sCAAsC+M,MAAO,CAAC,eAAiB,SAA7F,iBAFjC,YAShB,yBAAKzM,UAAU,OACX,yBAAKA,UAAU,qCACP,yBAAKA,UAAU,+DAAf,gCACiC,6BADjC,aAGW,6BAAK,uBAAGN,KAAK,iCACjD,kBAAC,IAAD,CAAiBkP,KAAMC,IAAU7O,UAAU,SAGd,uBAAGN,KAAK,yBACrC,kBAAC,IAAD,CAAiBkP,KAAME,IAAY9O,UAAU,aC5BhD+O,IAASC,OACL,kBAAC,IAAM7P,SAAP,KACO,mBCRI,WAEf,OACI,kBAAC,IAAMA,SAAP,KACI,kBAACD,EAAD,MACA,kBAAC2O,EAAD,MACA,kBAACc,EAAD,SDEG,OAEVM,SAASC,eAAe,SXqHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpM,MAAK,SAAAqM,GACjCA,EAAaC,kB","file":"static/js/main.6b785010.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default function Navigation(){\r\n    return(\r\n\r\n        <React.Fragment>\r\n<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"https://Aashiq-Otp.github.io/covid19Kerala\">Covid19 Kerala Tracker</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n     \r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"https://Aashiq-Otp.github.io/covid19Kerala\">Overview</Nav.Link>\r\n      <Nav.Link  href=\"https://Aashiq-Otp.github.io/covid19Kerala\"> District Wise</Nav.Link>\r\n    </Nav>\r\n    <Nav className=\"mr-auto\">\r\n     \r\n     </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nexport default function Test(props){\r\n\r\n    const [district,setDistrict] = useState(props.district)\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [dates,setDates] = useState([]);\r\n    const [tests,setTests] = useState([]);\r\n    const [confirms,setConfirms] = useState([]);\r\n    const [isDefault,setIsDefault] = useState(true);\r\n    const setlimit = () =>{setIsDefault(false)}\r\n    const setDefault = () => {setIsDefault(true)}\r\n    const [totaltests,settt] = useState();\r\n    const [negatives,setnegatives] = useState();\r\n    const [unconfirmed,setunconfirmed] = useState();\r\n    const options=\r\n    {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line',\r\n        },\r\n        stroke: {\r\n          width: [0, 4]\r\n        },\r\n        title: {\r\n          text: 'Total Tests And Confirmation Ratio'\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          enabledOnSeries: [1]\r\n        },\r\n        labels:dates,\r\n        xaxis: {\r\n          type: 'string'\r\n        },\r\n        yaxis: [{\r\n          title: {\r\n            text: 'Total Tests Conducted',\r\n          },\r\n        \r\n        }, {\r\n          opposite: true,\r\n          title: {\r\n            text: 'Total Confirmations'\r\n          }\r\n        }]\r\n      \r\n    \r\n    \r\n    };\r\n        \r\n        \r\n        const series =[{\r\n            name: 'Tests',\r\n            type: 'column',\r\n            data: tests\r\n          }, {\r\n            name: 'Confirms',\r\n            type: 'line',\r\n            data: confirms\r\n          }];\r\n\r\n\r\n\r\n          const options2=\r\n          {\r\n              chart: {\r\n                height: 350,\r\n                type: 'line',\r\n              },\r\n              stroke: {\r\n                width: [0, 4]\r\n              },\r\n              title: {\r\n                text: 'Total Tests And Confirmation Ratio'\r\n              },\r\n              dataLabels: {\r\n                enabled: true,\r\n                enabledOnSeries: [1]\r\n              },\r\n              labels:dates.slice(-21),\r\n              xaxis: {\r\n                type: 'string'\r\n              },\r\n              yaxis: [{\r\n                title: {\r\n                  text: 'Total Tests Conducted',\r\n                },\r\n              \r\n              }, {\r\n                opposite: true,\r\n                title: {\r\n                  text: 'Total Confirmations'\r\n                }\r\n              }]\r\n            \r\n          \r\n          \r\n          };\r\n              \r\n              \r\n              const series2 =[{\r\n                  name: 'Tests',\r\n                  type: 'column',\r\n                  data: tests.slice(-21)\r\n                }, {\r\n                  name: 'Confirms',\r\n                  type: 'line',\r\n                  data: confirms.slice(-21)\r\n                }];\r\n\r\n    useEffect(()=>{\r\n        var testcol=[];\r\n        var dateArray=[];\r\n        var total=241;\r\n        var counts =[]\r\n      \r\n        setDistrict(props.district);\r\n        if(props.district===\"\"){\r\n            setTitle(\"Kerala\")\r\n            fetch('https://api.covid19india.org/state_test_data.json').then(res=>res.json())\r\n            .then(data=>{\r\n                var tt,un,ne =0 ;\r\n               data.states_tested_data.map((item,i)=>{\r\n                    if(item.state === \"Kerala\"){\r\n                            dateArray.push((item.updatedon))\r\n                            testcol.push(item.totaltested)\r\n                            tt = (item.totaltested);\r\n                            ne = (item.negative);\r\n                            un = (item.unconfirmed);\r\n                    }\r\n                })\r\n                settt(tt);\r\n                            setnegatives(ne);\r\n                            setunconfirmed(un);\r\n              \r\n            })\r\n         \r\n            fetch('https://api.covid19india.org/states_daily.json').then(resp=>resp.json())\r\n            .then((data)=>{\r\n                data=data.states_daily.slice(53);\r\n                (data).map((c)=>{\r\n                    if(c.status==='Confirmed'){\r\n                        total=total+Number(c.kl);\r\n                        counts.push(total)\r\n                    }\r\n                })\r\n              \r\n                setConfirms(counts);\r\n                setDates(dateArray);\r\n                setTests(testcol)\r\n            })\r\n           \r\n           \r\n            \r\n            \r\n        }\r\n          else{\r\n            setTitle(props.district);\r\n          \r\n          }\r\n    },[props.district])\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <nav className = \"nav nav-tabs nav-fill flex-column flex-sm-row bg-dark text-white mb-2\">\r\n            <ul className = \"nav activatable p-2 d-flex justify-content-center\" >\r\n          <li class = \"nav-item\" >\r\n            <a class = \"nav-link pointer-without-bg\"\r\n            onClick={setDefault} >Default </a> </li><li class = \"nav-item\" >\r\n            <a class = \"nav-link pointer-without-bg\"\r\n            onClick={setlimit} > Last 21 Days </a> </li>  </ul>\r\n \r\n            </nav> \r\n           {(isDefault && <Chart options={options} series={series} type=\"line\" height={350} />)}\r\n           \r\n           {(isDefault===false && <Chart options={options2} series={series2} type=\"line\" height={350} />)}\r\n\r\n           <div className=\"row  d-flex justify-content-around\">\r\n             <div className=\"col-12\">\r\n               <div className=\"text-secondary font-weight-bold\">Total Tests Conducted :\r\n               <span className=\"text-dark\">\r\n                 {totaltests}</span> </div></div>\r\n\r\n                 <div className=\"col-12\">\r\n                 <div className=\"text-secondary font-weight-bold\">Negatives :\r\n               <span className=\"text-dark\">\r\n                 {negatives}</span> </div></div>\r\n            \r\n                 <div className=\"col-12\"> <div className=\"text-secondary font-weight-bold\">Unconfirmed :\r\n               <span className=\"text-dark\">\r\n                 {unconfirmed}</span> </div></div>\r\n            \r\n             </div>\r\n           \r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './progress.css';\r\nimport { CircularProgressbar,buildStyles} from 'react-circular-progressbar';\r\nimport Test from './tests';\r\n\r\nexport default function NationalComparison(props){\r\n\r\n\r\n    const [district,setDistrict] = useState(props.district);\r\n    const [type,setType] = useState(true);\r\n    const [deathP,setDeathP] = useState(0);\r\n    const [activeP,setactiveP] = useState(0);\r\n    const [recoveryP,SetRecoveryP] = useState(0);\r\n    const [totalact,settotalact] = useState(0);\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [parent,setParent] = useState(\"India\");\r\n    useEffect(()=>{\r\n      let stateConfirm,stateRec,stateDeath,stateActive;\r\n      var d = props.district;\r\n        setDistrict(props.district)\r\n\r\n        fetch('https://api.covid19india.org/data.json').then((resp)=>resp.json())\r\n        .then((data)=>{\r\n         stateConfirm= (data.statewise[18].confirmed);\r\n         stateDeath = (data.statewise[18].deaths);\r\n         stateRec =(data.statewise[18].recovered);\r\n         stateActive = (data.statewise[18].active);\r\n\r\n        });\r\n\r\n\r\n        if(props.district===\"\"){\r\n          setTitle(\"Kerala\");\r\n          fetch('https://api.covid19india.org/data.json').then((resp)=>resp.json())\r\n          .then((data)=>{\r\n        \r\n            var latestData = Number(data.cases_time_series.length);\r\n            var Activep = (((data.statewise[18].confirmed)/(data.cases_time_series[latestData-1].totalconfirmed))*100);\r\n             setactiveP(Activep.toPrecision(3))\r\n             var deathP =(((data.statewise[18].deaths)/(data.cases_time_series[latestData-1].totaldeceased))*100);\r\n                setDeathP(deathP.toPrecision(3));\r\n          var nationRecoveryRate = ((data.cases_time_series[latestData-1].totalrecovered)/(data.cases_time_series[latestData-1].totalconfirmed))*100;\r\n              nationRecoveryRate.toPrecision(3);\r\n        var stateRecoveryRate = (((data.statewise[18].recovered)/(data.statewise[18].confirmed))*100).toPrecision(3);\r\n            var RecoveryRate = (stateRecoveryRate-nationRecoveryRate).toPrecision(3);\r\n          SetRecoveryP(RecoveryRate)\r\n        }).then(()=>{\r\n               \r\n            })\r\n          \r\n        }\r\n        else{\r\n          setType(false);\r\n          setParent(\"Kerala\")\r\n          setTitle(props.district)\r\n          var distConf;\r\nvar distRecovered;\r\nvar distDeath;\r\nvar distActive;\r\n          fetch('https://api.covid19india.org/v2/state_district_wise.json').then((resp)=>resp.json())\r\n              .then((data)=>{\r\n              data.map((state,i)=>{\r\n                if(state.state===\"Kerala\"){\r\n                 var result = (state.districtData)\r\n                    result.map((dist,i)=>{\r\n                      if(dist.district===d){\r\n                        distConf = Number(dist.confirmed);\r\n                         distRecovered = Number(dist.recovered);\r\n                         distDeath = Number(dist.deceased);\r\n                         distActive = Number(dist.active);\r\n                      }\r\n                    })\r\n                    setactiveP(((distActive/stateActive)*100).toPrecision(2))\r\n                     SetRecoveryP(((distRecovered/stateRec)*100).toPrecision(2))\r\n                     settotalact(((distConf/stateConfirm)*100).toPrecision(2))\r\n                     setDeathP(((distDeath/stateDeath)*100).toPrecision(2))\r\n                }\r\n              })\r\n              })\r\n          \r\n           \r\n        }\r\n    },[props.district])\r\n    \r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-center\">\r\n    <p className=\"text-dark font-weight-bold font-large\">{title} Has</p>\r\n            </div>\r\n       \r\n                  <div className=\"row\">\r\n                    \r\n                    \r\n                     {( type && <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={activeP}\r\n                  text={`${activeP}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{activeP} % of total confirmed cases in {parent}</div>\r\n                </div>)}\r\n\r\n                {(type===false && <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={activeP}\r\n                  text={`${activeP}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{activeP} % of total active cases in {parent}</div>\r\n                </div>)}\r\n\r\n             \r\n             \r\n             \r\n             \r\n                <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={deathP}\r\n                  text={`${deathP}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{deathP} % of total expires in {parent}</div>\r\n                </div>\r\n\r\n               \r\n               \r\n               \r\n              \r\n              {( type &&  <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={recoveryP}\r\n                  text={`${recoveryP}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                \r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{recoveryP} % more Recovery rate than national level</div>\r\n                </div>)}\r\n\r\n\r\n{(  type===false &&\r\n                <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={recoveryP}\r\n                  text={`${recoveryP}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                \r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{recoveryP} % Recoveries of total reported in Kerala</div>\r\n                </div>\r\n)}\r\n\r\n\r\n{(  type===false &&\r\n                <div className=\"col\">\r\n                  <div className=\"box\">\r\n                <CircularProgressbar\r\n                  value={totalact}\r\n                  text={`${totalact}%`}\r\n                  styles={buildStyles({\r\n                    textColor: \"#33d9b2\",\r\n                    pathColor: \"#218c74\",\r\n                    \r\n                  })}\r\n                \r\n                />\r\n                </div>\r\n              <div className=\"text-dark text-center text-capitalize font-weight-bold smallfont\">{totalact} % total confirmed Cases in Kerala</div>\r\n                </div>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n          \r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function CaseGrowth(props){\r\n    const [district,setDistrict] = useState(props.district)\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [count,setCount] = useState([]);\r\n    const [dates,setDates] = useState([]);\r\n    const [isDefault,setIsDefault] = useState(true);\r\n    const [limit,setLimit] = useState();\r\n    const options={\r\n        chart: {\r\n            height: 150,\r\n            type: 'line',\r\n            zoom: {\r\n              type: 'x',\r\n              enabled: true,\r\n              autoScaleXaxis: true\r\n            },\r\n            toolbar: {\r\n              autoSelected: 'zoom'\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n            stroke: {\r\n                width: 4,\r\n                curve: 'smooth'\r\n              },\r\n          title: {\r\n            text: 'Confirmed Case Growth',\r\n            align: 'left'\r\n          },\r\n          markers: {\r\n            size: 4,\r\n            colors: [\"#FFA41B\"],\r\n            strokeColors: \"#fff\",\r\n            strokeWidth: 2,\r\n            hover: {\r\n              size: 2,\r\n            }\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shade: 'dark',\r\n              gradientToColors: [ '#FDD835'],\r\n              shadeIntensity: 1,\r\n              type: 'horizontal',\r\n              opacityFrom: 1,\r\n              opacityTo: 1,\r\n              stops: [0, 60, 60,]\r\n            },\r\n          },\r\n          grid: {\r\n            row: {\r\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n              opacity: 0.5\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: dates,\r\n            title:{\r\n              text:\"Date\"\r\n            }   \r\n          },\r\n          yaxis:{\r\n            title:{\r\n              text:\"Total Cases\"\r\n            }          }\r\n        }\r\n        const series =[{\r\n            name: \"Cases\",\r\n            data:count\r\n        }] \r\n        const options2={\r\n          chart: {\r\n              height: 150,\r\n              type: 'line',\r\n              zoom: {\r\n                type: 'x',\r\n                enabled: true,\r\n                autoScaleXaxis: true\r\n              },\r\n              toolbar: {\r\n                autoSelected: 'zoom'\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n              stroke: {\r\n                  width: 4,\r\n                  curve: 'smooth'\r\n                },\r\n            title: {\r\n              text: 'Confirmed Case Growth',\r\n              align: 'left'\r\n            },\r\n            markers: {\r\n              size: 4,\r\n              colors: [\"#FFA41B\"],\r\n              strokeColors: \"#fff\",\r\n              strokeWidth: 2,\r\n              hover: {\r\n                size: 2,\r\n              }\r\n            },\r\n            fill: {\r\n              type: 'gradient',\r\n              gradient: {\r\n                shade: 'dark',\r\n                gradientToColors: [ '#FDD835'],\r\n                shadeIntensity: 1,\r\n                type: 'horizontal',\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [0, 60, 60,]\r\n              },\r\n            },\r\n            grid: {\r\n              row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n              },\r\n            },\r\n            xaxis: {\r\n              categories: dates.slice(limit),\r\n              title:{\r\n                text:\"Date\"\r\n              }   \r\n            },\r\n            yaxis:{\r\n              title:{\r\n                text:\"Total Cases\"\r\n              }          }\r\n          }\r\n          const series2 =[{\r\n              name: \"Cases\",\r\n              data:count.slice(limit)\r\n          }] \r\n    useEffect(()=>{\r\n        var date=[];\r\n        let counts = [];\r\n        let total=0;\r\n        var d =(props.district);\r\n        setDistrict(props.district);\r\n        if(props.district===\"\"){\r\n            setTitle(\"Kerala\")\r\n            setLimit(-21)\r\n            fetch('https://api.covid19india.org/states_daily.json').then(resp=>resp.json())\r\n            .then((data)=>{\r\n                (data.states_daily).map((c)=>{\r\n                    if(c.status==='Confirmed'){\r\n                        date.push((c.date).substr(0,6));\r\n                        total=total+Number(c.kl);\r\n                        counts.push(total)\r\n                    }\r\n                })\r\n                setCount(counts);\r\n                setDates(date)\r\n            })\r\n          }\r\n          else{\r\n                //---------------------------------------------------//\r\n          //-----------------------DISTRICTS-------------------//\r\n          //--------------------------------------------------//\r\n\r\n\r\n            setTitle(props.district);\r\n            setLimit(-7)\r\n            var datesArray=[];\r\n            var countsArray=[];\r\n            fetch('https://api.covid19india.org/districts_daily.json').then(resp=>resp.json())\r\n            .then((data)=>{\r\n              let result=(data.districtsDaily.Kerala)\r\n              if(d===\"Alappuzha\"){\r\n                result.Alappuzha.map((data,i)=>{\r\n                 datesArray.push(data.date);\r\n                 countsArray.push(data.confirmed)\r\n                })\r\n                setDates(datesArray);\r\n                setCount(countsArray);\r\n              }\r\n              else if(d===\"Ernakulam\"){\r\n                result.Ernakulam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Idukki\"){\r\n                result.Idukki.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kannur\"){\r\n                result.Kannur.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kasaragod\"){\r\n                result.Kasaragod.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kollam\"){\r\n                result.Kollam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);              }\r\n              else if(d===\"Kottayam\"){\r\n                result.Kottayam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kozhikode\"){\r\n                result.Kozhikode.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Malappuram\"){\r\n                result.Malappuram.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);             }\r\n              else if(d===\"Palakkad\"){\r\n                result.Palakkad.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Pathanamthitta\"){\r\n                result.Pathanamthitta.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);              }\r\n              else if(d===\"Thiruvananthapuram\"){\r\n                result.Thiruvananthapuram.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Thrissur\"){\r\n                result.Thrissur.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Wayanad\"){\r\n                result.Wayanad.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n           \r\n              })\r\n        \r\n\r\n\r\n\r\n                //---------------------------------------------------//\r\n          //-----------------------DISTRICTS-------------------//\r\n          //--------------------------------------------------//\r\n          \r\n          }\r\n    },[props.district])\r\nconst setDefault = ()=>{setIsDefault(true)}\r\nconst setlimit = () => {setIsDefault(false)}\r\n    return(\r\n  \r\n        <React.Fragment>\r\n             <nav className = \"nav nav-tabs nav-fill flex-column flex-sm-row  bg-dark text-white mb-2 \">\r\n            <ul className = \"nav activatable p-2 d-flex justify-content-center\" >\r\n          <li class = \"nav-item\" >\r\n            <a class = \"nav-link pointer-without-bg\"\r\n            onClick={setDefault} >Default </a> </li><li class = \"nav-item\" >\r\n            <a class = \"nav-link pointer-without-bg\"\r\n            onClick={setlimit} > Last {limit} Days </a> </li>  </ul>\r\n \r\n            </nav> \r\n           {(isDefault && <Chart options={options} series={series} type=\"line\" height={350} />)}\r\n           \r\n           {(isDefault===false && <Chart options={options2} series={series2} type=\"line\" height={350} />)}\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nexport default function DailyChanges(props){\r\n    const [district,setDistrict] = useState(props.district)\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [Reportedcount,setReportedCount] = useState([]);\r\n    const [Recovereddcount,setRecoveredCount] = useState([]);\r\n    const [counts,setCount] = useState();\r\n    const [dates,setDates] = useState([]);\r\n    const options={\r\n        chart: {\r\n            height: 150,\r\n            type: 'bar',\r\n            zoom: {\r\n              enabled: false\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            curve: 'straight'\r\n          },\r\n          title: {\r\n            text: 'Daily Case Growth From 14 March',\r\n            align: 'left'\r\n          },\r\n          grid: {\r\n            row: {\r\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n              opacity: 0.5\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: dates,\r\n           \r\n          },\r\n          yaxis:{\r\n            title:{\r\n              text:\"Confirmed - Recovered\"\r\n            }   \r\n          }\r\n        }\r\n        const series =[{\r\n            name: \"Cases\",\r\n            data:counts\r\n        }] \r\n    useEffect(()=>{\r\n        var date=[];\r\n        let rep = [];\r\n        let rec = [];\r\n        setDistrict(props.district);\r\n        if(props.district===\"\"){\r\n            setTitle(\"Kerala\")\r\n            fetch('https://api.covid19india.org/states_daily.json').then(resp=>resp.json())\r\n            .then((data)=>{\r\n                (data.states_daily).map((c)=>{\r\n                    if(c.status==='Confirmed'){\r\n                        date.push((c.date).substr(0,6));\r\n                        rep.push(c.kl)\r\n                    }\r\n                    if(c.status===\"Recovered\"){\r\n                        rec.push(c.kl)\r\n                    }\r\n                })\r\n              var result = (rep.map((value,i)=>{\r\n                  return  value - rec[i]\r\n              }))\r\n              setCount(result)\r\n              setDates(date)\r\n            })\r\n          }\r\n          else{\r\n            setTitle(props.district);\r\n            var datesArray=[];\r\n            var countsArray=[];\r\n            let  d= props.district;\r\n            fetch('https://api.covid19india.org/districts_daily.json').then(resp=>resp.json())\r\n            .then((data)=>{\r\n              let result=(data.districtsDaily.Kerala)\r\n              if(d===\"Alappuzha\"){\r\n                result.Alappuzha.map((data,i)=>{\r\n                 datesArray.push(data.date);\r\n                 \r\n                 countsArray.push(data.confirmed)\r\n                })\r\n                setDates(datesArray);\r\n                setCount(countsArray);\r\n              }\r\n              else if(d===\"Ernakulam\"){\r\n                result.Ernakulam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Idukki\"){\r\n                result.Idukki.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kannur\"){\r\n                result.Kannur.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kasaragod\"){\r\n                result.Kasaragod.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kollam\"){\r\n                result.Kollam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);              }\r\n              else if(d===\"Kottayam\"){\r\n                result.Kottayam.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Kozhikode\"){\r\n                result.Kozhikode.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Malappuram\"){\r\n                result.Malappuram.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);             }\r\n              else if(d===\"Palakkad\"){\r\n                result.Palakkad.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Pathanamthitta\"){\r\n                result.Pathanamthitta.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);              }\r\n              else if(d===\"Thiruvananthapuram\"){\r\n                result.Thiruvananthapuram.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Thrissur\"){\r\n                result.Thrissur.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n              else if(d===\"Wayanad\"){\r\n                result.Wayanad.map((data,i)=>{\r\n                  datesArray.push(data.date);\r\n                  countsArray.push(data.confirmed)\r\n                 })\r\n                 setDates(datesArray);\r\n                 setCount(countsArray);\r\n              }\r\n           \r\n              })\r\n          \r\n          }\r\n    },[props.district])\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <Chart options={options} series={series} type=\"bar\" height={350} />\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nexport default function DistrictPerformance(props){\r\n\r\nconst [district,setDistrict] = useState(props.district);\r\nconst [dates,setDates] = useState();\r\nconst [count,setCount] = useState();\r\nconst [recovery,setRecovery] = useState();\r\n\r\nconst series = [\r\n    {\r\n      name: \"Confirmations\",\r\n      data: count\r\n    },\r\n    {\r\n      name: \"Recoveries\",\r\n      data: recovery\r\n    }\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: 'line',\r\n      dropShadow: {\r\n        enabled: true,\r\n        color: '#000',\r\n        top: 18,\r\n        left: 7,\r\n        blur: 10,\r\n        opacity: 0.2\r\n      },\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#77B6EA', '#27ae60'],\r\n    dataLabels: {\r\n      enabled: true,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth'\r\n    },\r\n    title: {\r\n      text: 'Confirmations - Recoveries:Performance',\r\n      align: 'left'\r\n    },\r\n    grid: {\r\n      borderColor: '#e7e7e7',\r\n      row: {\r\n        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n        opacity: 0.5\r\n      },\r\n    },\r\n    markers: {\r\n      size: 1\r\n    },\r\n    xaxis: {\r\n      categories: dates,\r\n      title: {\r\n        text: 'Date'\r\n      }\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Values'\r\n      },\r\n     \r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      floating: true,\r\n      offsetY: -25,\r\n      offsetX: -5\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    var d=props.district;\r\nsetDistrict(props.district)\r\n    if(props.district===\"\"){\r\n        return null;\r\n    }\r\n    else{\r\n        setDistrict(props.district)\r\n        var datesArray=[];\r\n        var countsArray=[];\r\n        var recArray =[];\r\n  \r\n        fetch('https://api.covid19india.org/districts_daily.json').then(resp=>resp.json())\r\n        .then((data)=>{\r\n          let result=(data.districtsDaily.Kerala)\r\n          if(d===\"Alappuzha\"){\r\n            result.Alappuzha.map((data,i)=>{\r\n             datesArray.push(data.date);\r\n             countsArray.push(data.confirmed)\r\n             recArray.push(data.recovered)\r\n            })\r\n            setDates(datesArray);\r\n            setCount(countsArray);\r\n            setRecovery(recArray)\r\n          }\r\n          else if(d===\"Ernakulam\"){\r\n            result.Ernakulam.map((data,i)=>{\r\n              datesArray.push(data.date);\r\n              countsArray.push(data.confirmed);\r\n              recArray.push(data.recovered)\r\n            })\r\n            setDates(datesArray);\r\n            setCount(countsArray);\r\n            setRecovery(recArray)\r\n          }\r\n          else if(d===\"Idukki\"){\r\n            result.Idukki.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Kannur\"){\r\n            result.Kannur.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Kasaragod\"){\r\n            result.Kasaragod.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Kollam\"){\r\n            result.Kollam.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)        }\r\n          else if(d===\"Kottayam\"){\r\n            result.Kottayam.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Kozhikode\"){\r\n            result.Kozhikode.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Malappuram\"){\r\n            result.Malappuram.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)          }\r\n          else if(d===\"Palakkad\"){\r\n            result.Palakkad.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Pathanamthitta\"){\r\n            result.Pathanamthitta.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)          }\r\n          else if(d===\"Thiruvananthapuram\"){\r\n            result.Thiruvananthapuram.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Thrissur\"){\r\n            result.Thrissur.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n          else if(d===\"Wayanad\"){\r\n            result.Wayanad.map((data,i)=>{\r\n                datesArray.push(data.date);\r\n                countsArray.push(data.confirmed);\r\n                recArray.push(data.recovered)\r\n              })\r\n              setDates(datesArray);\r\n              setCount(countsArray);\r\n              setRecovery(recArray)\r\n          }\r\n       \r\n          })\r\n    }\r\n},[props.district])\r\n\r\n    return(\r\n        <React.Fragment>\r\n       \r\n       <Chart options={options} series={series} type=\"line\" height={350} />\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Accordion , Card ,Button} from 'react-bootstrap';\r\nimport NationalComparison from './nationalcomparison';\r\nimport CaseGrowth from './casegrowth';\r\nimport DailyChanges from './dailychanges';\r\nimport Test from './tests';\r\nimport DistrictPerformance from './distPerform';\r\nimport DistInfo from './distInfo';\r\nexport default  function Analysis(props){\r\n    const [district,setDistrict] = useState(props.district);\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [compTitle,setCompTitle] = useState(\"National Level  Comparision\")\r\n    const [type,setType] =useState(true);\r\n    const [dailyTitle,setDailyTitle] = useState(\"Daily Changes\");\r\n    const [testTitle,setTestTitle] = useState(\"Tests - Confirmations\");\r\n    useEffect(()=>{\r\n        setDistrict(props.district)\r\n        console.log(props.district)\r\n        if(props.district===\"\"){\r\n          setTitle(\"Kerala\")\r\n        }\r\n        else{\r\n          //---------------------------------------------------//\r\n          //-----------------------DISTRICTS-------------------//\r\n          //--------------------------------------------------//\r\n          setTitle(props.district);\r\n          setCompTitle(\"State Level  Comparision\")\r\n          setType(false);\r\n          setDailyTitle(\"Confirmations - Recoveries\")\r\n          \r\n\r\n            //---------------------------------------------------//\r\n          //-----------------------DISTRICTS-------------------//\r\n          //--------------------------------------------------//\r\n        }\r\n     \r\n    },[props.district])\r\n\r\n    return(\r\n        <React.Fragment>\r\n           <div className=\"container-fluid\">\r\n           <Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" style={{'textDecoration':'none'}}>\r\n       {compTitle}\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n          <NationalComparison district={props.district}/>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" style={{'textDecoration':'none'}}>\r\n        Case Growth Analysis\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <CaseGrowth district={props.district}/>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" style={{'textDecoration':'none'}}>\r\n        {dailyTitle}\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body>\r\n        {(type && <DailyChanges district={district}/>)}\r\n        {(type===false && <DistrictPerformance district={district}/>)}\r\n        \r\n        </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n \r\n  {(type &&  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" style={{'textDecoration':'none'}}>\r\n      {testTitle}\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"3\">\r\n      <Card.Body>\r\n      <Test district={district}/>\r\n       \r\n\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card> )}\r\n</Accordion>\r\n           </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Badge } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './data.css'\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport Analysis from './analys';\r\nexport default function Data(props){\r\n    const [district,setDistrict] = useState(props.district);\r\n    const [fetchedData,setFetchedData] = useState([]);\r\n    const [title,setTitle] = useState(\"Kerala - KL\");\r\n    const [lastUpdated,setLastUpdated] = useState(\"Undefined\")\r\n    const [inprop,setInprop] = useState(false);\r\n    const [typevar,settypevar] = useState(true);\r\n    const [zone,setZone] = useState();\r\n   \r\n    useEffect(()=>{\r\n        setDistrict(props.district)\r\n        //fetching API\r\n        if(props.district===\"\")\r\n       { \r\n\r\n          fetch('https://api.covid19india.org/data.json')\r\n        .then((resp)=>resp.json())\r\n        .then((data)=>{\r\n          \r\n         setFetchedData(data.statewise[18])\r\n            setLastUpdated(data.statewise[18].lastupdatedtime)\r\n        }).then(()=>{\r\n            setInprop(true)\r\n        })\r\n        \r\n    } //If \"\"Overview\"\"\r\n    else{\r\n        const d = props.district;\r\n        setTitle(props.district)\r\n        settypevar(false);\r\n        fetch('https://api.covid19india.org/districts_daily.json').then(resp=>resp.json())\r\n        .then((data)=>{\r\n          let result=(data.districtsDaily.Kerala)\r\n          if(d===\"Alappuzha\"){\r\n            setFetchedData((result.Alappuzha).slice(-1)[0])\r\n            console.log(result.Alappuzha.slice(-1))\r\n          }\r\n          else if(d===\"Ernakulam\"){\r\n            setFetchedData(result.Ernakulam.slice(-1)[0])\r\n          }\r\n          else if(d===\"Idukki\"){\r\n            setFetchedData(result.Idukki.slice(-1)[0])\r\n          }\r\n          else if(d===\"Kannur\"){\r\n            setFetchedData(result.Kannur.slice(-1)[0])\r\n          }\r\n          else if(d===\"Kasaragod\"){\r\n            setFetchedData(result.Kasaragod.slice(-1)[0])\r\n          }\r\n          else if(d===\"Kollam\"){\r\n            setFetchedData(result.Kollam.slice(-1)[0])\r\n          }\r\n          else if(d===\"Kottayam\"){\r\n            setFetchedData(result.Kottayam.slice(-1)[0])\r\n          }\r\n          else if(d===\"Kozhikode\"){\r\n            setFetchedData(result.Kozhikode.slice(-1)[0])\r\n          }\r\n          else if(d===\"Malappuram\"){\r\n            setFetchedData(result.Malappuram.slice(-1)[0])\r\n          }\r\n          else if(d===\"Palakkad\"){\r\n            setFetchedData(result.Palakkad.slice(-1)[0])\r\n          }\r\n          else if(d===\"Pathanamthitta\"){\r\n            setFetchedData(result.Pathanamthitta.slice(-1)[0])\r\n          }\r\n          else if(d===\"Thiruvananthapuram\"){\r\n            setFetchedData(result.Thiruvananthapuram.slice(-1)[0])\r\n          }\r\n          else if(d===\"Thrissur\"){\r\n            setFetchedData(result.Thrissur.slice(-1)[0])\r\n          }\r\n          else if(d===\"Wayanad\"){\r\n            setFetchedData(result.Wayanad.slice(-1)[0])\r\n          }\r\n       \r\n          })\r\n          fetch('https://api.covid19india.org/zones.json').then((resp)=>resp.json())\r\n          .then((data)=>{\r\n              data.zones.map((dist,i)=>{\r\n                  if(dist.district===props.district){\r\n                      setZone(dist.zone)\r\n                  }\r\n              })\r\n          })\r\n    \r\n    }\r\n\r\n    },[props.district])\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container-fluid\">\r\n           \r\n                <div className=\"row m-3 d-flex justify-content-center\">\r\n                    <div className=\"title\"> {title} </div>\r\n                </div>\r\n\r\n                {(typevar===false &&\r\n                    <div className=\"row\">\r\n                       <div className=\"col d-flex justify-content-center\"><div className=\" font-weight-bold\" style={{'fontSize':'18px'}}>\r\n                The District Is Under : <span style={{'color':zone,'fontFamily':'Segoe UI'}}>{zone}</span> Zone\r\n                       </div>\r\n                        </div>\r\n                        </div>\r\n                    )}\r\n\r\n                <div className=\"row \">\r\n                    <div className=\"col text-center text-secondary font-weight-bold m-2\">Last Updated : {lastUpdated} </div>\r\n                </div>\r\n         <CSSTransition \r\n         in={inprop}\r\n         timeout={1000}\r\n         classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col mb-3 mr-3 d-flex justify-content-around\">\r\n                        <div className=\"badge\">\r\n                            <Badge variant=\"primary\">Total Reported<br/>{fetchedData.confirmed}</Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col mb-3 mr-3 d-flex justify-content-around\">\r\n                        <div className=\"badge\">\r\n                            <Badge variant=\"success\">Total Recovered<br/>{fetchedData.recovered}</Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col mb-3 mr-3 d-flex justify-content-around\">\r\n                        <div className=\"badge\">\r\n                            <Badge variant=\"danger\">Total Deaths<br/>\r\n                            {(typevar && fetchedData.deaths)}\r\n                            {(typevar===false && fetchedData.deceased )}\r\n                            </Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col mb-3 mr-3 d-flex justify-content-around\">\r\n                        <div className=\"badge text-white\">\r\n                            <Badge variant=\"info\">Under Treatment<br/>{fetchedData.active}</Badge>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               </CSSTransition>\r\n            </div>\r\n            <Analysis district={props.district}/>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}","// eslint-disable-next-line\r\nimport React, { useState } from 'react';\r\nimport './search.css'\r\nimport Autocomplete from 'react-autocomplete';\r\nimport Data from './data';\r\nexport default function Search(){\r\n    const [text,setText] = useState(\"\")\r\n    const style={\r\n       ' border': '1px solid black',\r\n        'borderRadius': '20px',\r\n       ' padding': '3px',\r\n        'textIindent': '4px',\r\n        'color': 'rgb(9, 41, 75)',\r\n        'fontWeight': 'bold',\r\n        'textTransform': 'uppercase',\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col d-flex justify-content-center m-4\">\r\n                        <div className=\"search d-flex\">\r\n                            <div className=\"text-success font-weight-bold mr-4\">\r\n                                District\r\n                            </div>\r\n                            <Autocomplete\r\n                                        \r\n                                            getItemValue={(item) => item.label}\r\n                                            items={[\r\n                                                { label: 'Alappuzha',id:1 },\r\n                                                { label: 'Ernakulam',id:2 },\r\n                                                { label: 'Idukki',id:3 },\r\n                                                { label: 'Kannur',id:4 },\r\n                                                { label: 'Kasaragod',id:5 },\r\n                                                { label: 'Kollam',id:6 },\r\n                                                { label: 'Kottayam',id:7 },\r\n                                                { label: 'Kozhikode',id:8 },\r\n                                                { label: 'Malappuram',id:9 },\r\n                                                { label: 'Palakkad',id:10 },\r\n                                                { label: 'Pathanamthitta',id:11 },\r\n                                                { label: 'Thiruvananthapuram',id:12 },\r\n                                                { label: 'Thrissur',id:13 },\r\n                                                { label: 'Wayanad',id:14 },\r\n                                                \r\n                                            ]}\r\n                                            renderItem={(item, isHighlighted) =>\r\n                                                <div style={{ background: isHighlighted ? 'lightgray' : 'white' }} key={item.id}>\r\n                                                {item.label}\r\n                                                </div>\r\n                                            }\r\n                                            menuStyle={style}\r\n                                            value={text}\r\n                                            onChange={e => {setText(e.target.value)}}\r\n                                            onSelect={value => setText(value)}\r\n                                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Data district ={text}/>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { Accordion , Card ,Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub,faTelegram } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nexport default function Footer(){\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col p-4\">\r\n                                <div className=\"text-dark font-weight-bolder text-center\">\r\n                                    <div className=\"mb-3\">#StayHome_StaySafe</div><br/>\r\n                                    <div className=\"mb-1 font-smaller mb-1\">All The Datas Are Collected From Reliable Sources,However This Doesnt Represent The Official Data</div>\r\n                                </div>\r\n                                <div className=\"font-weight-bolder mt-2 text-secondary text-center\">\r\n\r\n                                    Thanks For The Public API's  <a className=\"text-dark\" href=\"https://github.com/covid19india/api\" style={{'textDecoration':'none'}}>\r\n                                        @Covid19India\r\n                                    </a> Team\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                            <div className=\"bg-dark text-white p-4 text-center font-weight-bolder w-100\">\r\n                                Covid-19 Kerala Analyzer Tool<br/>\r\n                          \r\n                             @AashiqOtp<br/><a href=\"https://github.com/Aashiq-Otp\"> \r\n   <FontAwesomeIcon icon={faGithub} className=\"m-1\" />\r\n                                </a>\r\n\r\n                                <a href=\"https://t.me/MrAashiq\"> \r\n   <FontAwesomeIcon icon={faTelegram} className=\"m-1\" />\r\n                                </a>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nimport Home from './components/home';\n\n\n\nReactDOM.render(\n    <React.Fragment>\n           <Home/>\n    </React.Fragment>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport Navigation from './navbar';\r\nimport Search from './serach';\r\nimport Footer from './footer';\r\nexport default function Home(){\r\n    \r\nreturn(\r\n    <React.Fragment>\r\n        <Navigation/>\r\n        <Search/>\r\n        <Footer/>\r\n    </React.Fragment>\r\n)\r\n\r\n\r\n}"],"sourceRoot":""}